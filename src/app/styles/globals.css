@tailwind base;
@tailwind components;
@游눹游봉 Vamos adicionar um loader e garantir que os produtos sejam carregados dinamicamente. Aqui est치 o c칩digo atualizado para incluir um loader e buscar imagens dinamicamente.

### **1. Atualize o `ProductModal` para Incluir o Loader**

Adicione um estilo de loader e ajuste a l칩gica para buscar dinamicamente os produtos. 

### **C칩digo do Componente `ProductModal`**

**_src/app/components/ProductModal.js_**
```javascript
'use client'; // Adiciona esta linha no in칤cio do arquivo

import React, { useEffect, useState } from 'react';
import { AiOutlineClose } from 'react-icons/ai'; // Adiciona um 칤cone de fechamento

const fetchProducts = async (brand) => {
  // Simula a busca de produtos dinamicamente
  const products = {
    Prada: [
      { name: 'Product 1', image: '/images/products/prada/product1.jpg' },
      { name: 'Product 2', image: '/images/products/prada/product2.jpg' },
      { name: 'Product 3', image: '/images/products/prada/product3.jpg' },
    ],
    Dior: [
      { name: 'Product 1', image: '/images/products/dior/product1.jpg' },
      { name: 'Product 2', image: '/images/products/dior/product2.jpg' },
      { name: 'Product 3', image: '/images/products/dior/product3.jpg' },
    ],
    // Adicione mais marcas e produtos aqui
  };

  // Simula칞칚o de tempo de carregamento
  await new Promise((resolve) => setTimeout(resolve, 1000));

  return products[brand] || [];
};

const ProductModal = ({ brand, isOpen, onClose }) => {
  const [products, setProducts] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    if (isOpen && brand) {
      setLoading(true);
      fetchProducts(brand).then((fetchedProducts) => {
        setProducts(fetchedProducts);
        setLoading(false);
      });
    }
  }, [isOpen, brand]);

  if (!isOpen) return null;

  const handleProductClick = (product) => {
    window.open(`https://wa.me/?text=Estou%20interessado%20no%20produto%20${product.name}%20da%20marca%20${brand}`, '_blank');
  };

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white p-4 rounded-lg shadow-lg max-w-3xl w-full relative">
        <button className="absolute top-2 right-2 text-2xl" onClick={onClose}><AiOutlineClose /></button>
        <h2 className="text-2xl font-bold mb-4 text-center">{brand}</h2>
        {loading ? (
          <div className="flex justify-center items-center h-64">
            <div className="loader"></div>
          </div>
        ) : (
          <div className="flex overflow-x-scroll space-x-4 pb-4">
            {products.length === 0 ? (
              <p className="text-center w-full">Nenhum produto encontrado</p>
            ) : (
              products.map((product, index) => (
                <div key={index} className="flex-none w-60 cursor-pointer" onClick={() => handleProductClick(product)}>
                  <img src={product.image} alt={product.name} className="w-full h-auto rounded-lg shadow-md" />
                  <p className="text-center mt-2">{product.name}</p>
                </div>
              ))
            )}
          </div>
        )}
      </div>
    </div>
  );
};

export default ProductModal;


@tailwind base;
@tailwind components;
@tailwind utilities;

.loader {
  border: 16px solid #f3f3f3;
  border-top: 16px solid #3498db;
  border-radius: 50%;
  width: 120px;
  height: 120px;
  animation: spin 2s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

@tailwind base;
@tailwind components;
@tailwind utilities;

/* Adicione gradientes personalizados */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Adicione gradientes personalizados */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Adicione gradientes personalizados */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Adicione gradientes personalizados */
@layer utilities {
  .bg-gradient-to-r {
    background-image: linear-gradient(to right, var(--tw-gradient-stops));
  }
  .from-gray-800 {
    --tw-gradient-from: #2C2C2C;
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(44, 44, 44, 0));
  }
  .via-gray-500 {
    --tw-gradient-to: #C0C0C0;
  }
  .to-gold-500 {
    --tw-gradient-to: #FFD700;
  }
}


@tailwind base;
@tailwind components;
@tailwind utilities;

/* Gradientes personalizados */
@layer utilities {
  .bg-gradient-to-r {
    background-image: linear-gradient(to right, var(--tw-gradient-stops));
  }
  .from-gray-800 {
    --tw-gradient-from: #2C2C2C;
    --tw-gradient-stops: var(--tw-gradient-from), var (--tw-gradient-to, rgba(44, 44, 44, 0));
  }
  .via-gray-500 {
    --tw-gradient-to: #C0C0C0;
  }
  .to-gold-500 {
    --tw-gradient-to: #FFD700;
  }
}

/* Estilos para o slideshow */
.slideshow {
  position: relative;
  height: 500px; /* Ajuste conforme necess치rio */
}

.slide {
  position: absolute;
  inset: 0;
  opacity: 0;
  transition: opacity 1s ease-in-out;
}

.slide.active {
  opacity: 1;
}

@tailwind base;
@tailwind components;
@tailwind utilities;

/* Gradientes personalizados */
@layer utilities {
  .bg-gradient-to-r {
    background-image: linear-gradient(to right, var(--tw-gradient-stops));
  }
  .from-gray-800 {
    --tw-gradient-from: #2C2C2C;
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(44, 44, 44, 0));
  }
  .via-gray-500 {
    --tw-gradient-to: #C0C0C0;
  }
  .to-gold-500 {
    --tw-gradient-to: #FFD700;
  }
}

/* Estilos para o slideshow */
.slideshow {
  position: relative;
  height: 500px; /* Ajuste conforme necess치rio */
}

.slide {
  position: absolute;
  inset: 0;
  opacity: 0;
  transition: opacity 1s ease-in-out;
}

.slide.active {
  opacity: 1;
}
